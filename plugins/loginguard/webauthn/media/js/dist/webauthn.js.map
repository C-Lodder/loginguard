{"version":3,"sources":["../webauthn.js"],"names":["akeeba","LoginGuard","webauthn","authData","setUp","navigator","alert","Joomla","JText","_","console","log","rawPKData","document","forms","querySelectorAll","value","publicKey","JSON","parse","atob","arrayToBase64String","a","btoa","String","fromCharCode","challenge","Uint8Array","from","window","c","charCodeAt","user","id","excludeCredentials","map","data","credentials","create","then","publicKeyCredential","type","rawId","response","clientDataJSON","attestationObject","getElementById","stringify","submit","error","handle_error","message","validate","allowCredentials","get","authenticatorData","signature","userHandle"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;AAMA;AACA,IAAIA,MAAM,GAAGA,MAAM,IAAI,EAAvB;AAEAA,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACC,UAAP,IAAqB,EAAzC;AAEAD,MAAM,CAACC,UAAP,CAAkBC,QAAlB,GAA6BF,MAAM,CAACC,UAAP,CAAkBC,QAAlB,IAA8B;AACvDC,EAAAA,QAAQ,EAAE;AAD6C,CAA3D;AAIA;;;;AAGAH,MAAM,CAACC,UAAP,CAAkBC,QAAlB,CAA2BE,KAA3B,GAAmC,YAAY;AAC3C;AACA,MAAI,EAAE,iBAAiBC,SAAnB,CAAJ,EACA;AACIC,IAAAA,KAAK,CAACC,MAAM,CAACC,KAAP,CAAaC,CAAb,CAAe,+CAAf,CAAD,CAAL;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AAEA;AACH;;AAED,MAAIC,SAAS,GAAGC,QAAQ,CAACC,KAAT,CAAe,wBAAf,EAAyCC,gBAAzC,CAA0D,yBAA1D,EAAqF,CAArF,EAAwFC,KAAxG;AACA,MAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACR,SAAD,CAAf,CAAhB,CAZ2C,CAc3C;;AACA,WAASS,mBAAT,CAA6BC,CAA7B,EACA;AACI,WAAOC,IAAI,CAACC,MAAM,CAACC,YAAP,OAAAD,MAAM,qBAAiBF,CAAjB,EAAP,CAAX;AACH,GAlB0C,CAoB3C;;;AACAL,EAAAA,SAAS,CAACS,SAAV,GAAsBC,UAAU,CAACC,IAAX,CAAgBC,MAAM,CAACT,IAAP,CAAYH,SAAS,CAACS,SAAtB,CAAhB,EAAkD,UAAAI,CAAC;AAAA,WAAIA,CAAC,CAACC,UAAF,CAAa,CAAb,CAAJ;AAAA,GAAnD,CAAtB;AACAd,EAAAA,SAAS,CAACe,IAAV,CAAeC,EAAf,GAAsBN,UAAU,CAACC,IAAX,CAAgBC,MAAM,CAACT,IAAP,CAAYH,SAAS,CAACe,IAAV,CAAeC,EAA3B,CAAhB,EAAgD,UAAAH,CAAC;AAAA,WAAIA,CAAC,CAACC,UAAF,CAAa,CAAb,CAAJ;AAAA,GAAjD,CAAtB;;AAEA,MAAId,SAAS,CAACiB,kBAAd,EACA;AACIjB,IAAAA,SAAS,CAACiB,kBAAV,GAA+BjB,SAAS,CAACiB,kBAAV,CAA6BC,GAA7B,CAAiC,UAAUC,IAAV,EAAgB;AAC5E,+BACOA,IADP;AAEI,cAAMT,UAAU,CAACC,IAAX,CAAgBC,MAAM,CAACT,IAAP,CAAYgB,IAAI,CAACH,EAAjB,CAAhB,EAAsC,UAAAH,CAAC;AAAA,iBAAIA,CAAC,CAACC,UAAF,CAAa,CAAb,CAAJ;AAAA,SAAvC;AAFV;AAIH,KAL8B,CAA/B;AAMH,GAhC0C,CAkC3C;;;AACA1B,EAAAA,SAAS,CAACgC,WAAV,CAAsBC,MAAtB,CAA6B;AAACrB,IAAAA,SAAS,EAATA;AAAD,GAA7B,EACKsB,IADL,CACU,UAAUH,IAAV,EAAgB;AAClB,QAAII,mBAAmB,GAAG;AACtBP,MAAAA,EAAE,EAAQG,IAAI,CAACH,EADO;AAEtBQ,MAAAA,IAAI,EAAML,IAAI,CAACK,IAFO;AAGtBC,MAAAA,KAAK,EAAKrB,mBAAmB,CAAC,IAAIM,UAAJ,CAAeS,IAAI,CAACM,KAApB,CAAD,CAHP;AAItBC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,cAAc,EAAKvB,mBAAmB,CAAC,IAAIM,UAAJ,CAAeS,IAAI,CAACO,QAAL,CAAcC,cAA7B,CAAD,CADhC;AAENC,QAAAA,iBAAiB,EAAExB,mBAAmB,CAAC,IAAIM,UAAJ,CAAeS,IAAI,CAACO,QAAL,CAAcE,iBAA7B,CAAD;AAFhC;AAJY,KAA1B,CADkB,CAWlB;;AACAhC,IAAAA,QAAQ,CAACiC,cAAT,CAAwB,wBAAxB,EAAkD9B,KAAlD,GAA0DO,IAAI,CAACL,IAAI,CAAC6B,SAAL,CAAeP,mBAAf,CAAD,CAA9D,CAZkB,CAclB;;AACA3B,IAAAA,QAAQ,CAACC,KAAT,CAAe,wBAAf,EAAyCkC,MAAzC;AACH,GAjBL,EAiBO,UAAUC,KAAV,EAAiB;AAChB;AACAjD,IAAAA,MAAM,CAACC,UAAP,CAAkBC,QAAlB,CAA2BgD,YAA3B,CAAwCD,KAAxC;AACH,GApBL;AAqBH,CAxDD;;AA0DAjD,MAAM,CAACC,UAAP,CAAkBC,QAAlB,CAA2BgD,YAA3B,GAA0C,UAAUC,OAAV,EAAmB;AACzD7C,EAAAA,KAAK,CAAC6C,OAAD,CAAL;AAEAzC,EAAAA,OAAO,CAACC,GAAR,CAAYwC,OAAZ;AACH,CAJD;;AAMAnD,MAAM,CAACC,UAAP,CAAkBC,QAAlB,CAA2BkD,QAA3B,GAAsC,YACtC;AACI;AACA,MAAI,EAAE,iBAAiB/C,SAAnB,CAAJ,EACA;AACIC,IAAAA,KAAK,CAACC,MAAM,CAACC,KAAP,CAAaC,CAAb,CAAe,+CAAf,CAAD,CAAL;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AAEA;AACH;;AAED,WAASU,mBAAT,CAA6BC,CAA7B,EACA;AACI,WAAOC,IAAI,CAACC,MAAM,CAACC,YAAP,OAAAD,MAAM,qBAAiBF,CAAjB,EAAP,CAAX;AACH;;AAEDZ,EAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACC,UAAP,CAAkBC,QAAlB,CAA2BC,QAAvC;AAEA,MAAIc,SAAS,GAAGjB,MAAM,CAACC,UAAP,CAAkBC,QAAlB,CAA2BC,QAA3C;;AAEA,MAAI,CAACc,SAAS,CAACS,SAAf,EACA;AACI1B,IAAAA,MAAM,CAACC,UAAP,CAAkBC,QAAlB,CAA2BgD,YAA3B,CAAwC3C,MAAM,CAACC,KAAP,CAAaC,CAAb,CAAe,kDAAf,CAAxC;AAEA;AACH;;AAEDQ,EAAAA,SAAS,CAACS,SAAV,GAA6BC,UAAU,CAACC,IAAX,CAAgBC,MAAM,CAACT,IAAP,CAAYH,SAAS,CAACS,SAAtB,CAAhB,EAAkD,UAAAI,CAAC;AAAA,WAAIA,CAAC,CAACC,UAAF,CAAa,CAAb,CAAJ;AAAA,GAAnD,CAA7B;AACAd,EAAAA,SAAS,CAACoC,gBAAV,GAA6BpC,SAAS,CAACoC,gBAAV,CAA2BlB,GAA3B,CAA+B,UAAUC,IAAV,EAAgB;AACxE,6BACOA,IADP;AAEI,YAAMT,UAAU,CAACC,IAAX,CAAgBR,IAAI,CAACgB,IAAI,CAACH,EAAN,CAApB,EAA+B,UAAAH,CAAC;AAAA,eAAIA,CAAC,CAACC,UAAF,CAAa,CAAb,CAAJ;AAAA,OAAhC;AAFV;AAIH,GAL4B,CAA7B;AAOA1B,EAAAA,SAAS,CAACgC,WAAV,CAAsBiB,GAAtB,CAA0B;AAACrC,IAAAA,SAAS,EAATA;AAAD,GAA1B,EACKsB,IADL,CACU,UAAAH,IAAI,EAAI;AACV,QAAII,mBAAmB,GAAG;AACtBP,MAAAA,EAAE,EAAQG,IAAI,CAACH,EADO;AAEtBQ,MAAAA,IAAI,EAAML,IAAI,CAACK,IAFO;AAGtBC,MAAAA,KAAK,EAAKrB,mBAAmB,CAAC,IAAIM,UAAJ,CAAeS,IAAI,CAACM,KAApB,CAAD,CAHP;AAItBC,MAAAA,QAAQ,EAAE;AACNY,QAAAA,iBAAiB,EAAElC,mBAAmB,CAAC,IAAIM,UAAJ,CAAeS,IAAI,CAACO,QAAL,CAAcY,iBAA7B,CAAD,CADhC;AAENX,QAAAA,cAAc,EAAKvB,mBAAmB,CAAC,IAAIM,UAAJ,CAAeS,IAAI,CAACO,QAAL,CAAcC,cAA7B,CAAD,CAFhC;AAGNY,QAAAA,SAAS,EAAUnC,mBAAmB,CAAC,IAAIM,UAAJ,CAAeS,IAAI,CAACO,QAAL,CAAca,SAA7B,CAAD,CAHhC;AAINC,QAAAA,UAAU,EAASrB,IAAI,CAACO,QAAL,CAAcc,UAAd,GAA2BpC,mBAAmB,CAC7D,IAAIM,UAAJ,CAAeS,IAAI,CAACO,QAAL,CAAcc,UAA7B,CAD6D,CAA9C,GAC6B;AAL1C;AAJY,KAA1B;AAaA5C,IAAAA,QAAQ,CAACiC,cAAT,CAAwB,gBAAxB,EAA0C9B,KAA1C,GAAkDO,IAAI,CAACL,IAAI,CAAC6B,SAAL,CAAeP,mBAAf,CAAD,CAAtD;AACA3B,IAAAA,QAAQ,CAACC,KAAT,CAAe,yBAAf,EAA0CkC,MAA1C;AACH,GAjBL,EAiBO,UAAAC,KAAK,EAAI;AACR;AACAvC,IAAAA,OAAO,CAACC,GAAR,CAAYsC,KAAZ;AACAjD,IAAAA,MAAM,CAACC,UAAP,CAAkBC,QAAlB,CAA2BgD,YAA3B,CAAwCD,KAAxC;AACH,GArBL;AAsBH,CA1DD","sourcesContent":["/*\n * @package   AkeebaLoginGuard\n * @copyright Copyright (c)2016-2019 Nicholas K. Dionysopoulos / Akeeba Ltd\n * @license   GNU General Public License version 3, or later\n */\n\n// Namespace\nvar akeeba = akeeba || {};\n\nakeeba.LoginGuard = akeeba.LoginGuard || {};\n\nakeeba.LoginGuard.webauthn = akeeba.LoginGuard.webauthn || {\n    authData: null\n};\n\n/**\n * Ask the user to link an authenticator using the provided public key (created server-side).\n */\nakeeba.LoginGuard.webauthn.setUp = function () {\n    // Make sure the browser supports Webauthn\n    if (!(\"credentials\" in navigator))\n    {\n        alert(Joomla.JText._(\"PLG_LOGINGUARD_WEBAUTHN_ERR_NOTAVAILABLE_HEAD\"));\n\n        console.log(\"This browser does not support Webauthn\");\n\n        return;\n    }\n\n    let rawPKData = document.forms[\"loginguard-method-edit\"].querySelectorAll('input[name=\"pkRequest\"]')[0].value;\n    let publicKey = JSON.parse(atob(rawPKData));\n\n    // Utility function to convert array data to base64 strings\n    function arrayToBase64String(a)\n    {\n        return btoa(String.fromCharCode(...a));\n    }\n\n    // Convert the public key infomration to a format usable by the browser's credentials managemer\n    publicKey.challenge = Uint8Array.from(window.atob(publicKey.challenge), c => c.charCodeAt(0));\n    publicKey.user.id   = Uint8Array.from(window.atob(publicKey.user.id), c => c.charCodeAt(0));\n\n    if (publicKey.excludeCredentials)\n    {\n        publicKey.excludeCredentials = publicKey.excludeCredentials.map(function (data) {\n            return {\n                ...data,\n                \"id\": Uint8Array.from(window.atob(data.id), c => c.charCodeAt(0))\n            };\n        });\n    }\n\n    // Ask the browser to prompt the user for their authenticator\n    navigator.credentials.create({publicKey})\n        .then(function (data) {\n            let publicKeyCredential = {\n                id:       data.id,\n                type:     data.type,\n                rawId:    arrayToBase64String(new Uint8Array(data.rawId)),\n                response: {\n                    clientDataJSON:    arrayToBase64String(new Uint8Array(data.response.clientDataJSON)),\n                    attestationObject: arrayToBase64String(new Uint8Array(data.response.attestationObject))\n                }\n            };\n\n            // Store the WebAuthn reply\n            document.getElementById(\"loginguard-method-code\").value = btoa(JSON.stringify(publicKeyCredential));\n\n            // Submit the form\n            document.forms[\"loginguard-method-edit\"].submit();\n        }, function (error) {\n            // An error occurred: timeout, request to provide the authenticator refused, hardware / software error...\n            akeeba.LoginGuard.webauthn.handle_error(error);\n        });\n};\n\nakeeba.LoginGuard.webauthn.handle_error = function (message) {\n    alert(message);\n\n    console.log(message);\n};\n\nakeeba.LoginGuard.webauthn.validate = function()\n{\n    // Make sure the browser supports Webauthn\n    if (!(\"credentials\" in navigator))\n    {\n        alert(Joomla.JText._(\"PLG_LOGINGUARD_WEBAUTHN_ERR_NOTAVAILABLE_HEAD\"));\n\n        console.log(\"This browser does not support Webauthn\");\n\n        return;\n    }\n\n    function arrayToBase64String(a)\n    {\n        return btoa(String.fromCharCode(...a));\n    }\n\n    console.log(akeeba.LoginGuard.webauthn.authData);\n\n    let publicKey = akeeba.LoginGuard.webauthn.authData;\n\n    if (!publicKey.challenge)\n    {\n        akeeba.LoginGuard.webauthn.handle_error(Joomla.JText._('PLG_LOGINGUARD_WEBAUTHN_ERR_NO_STORED_CREDENTIAL'));\n\n        return;\n    }\n\n    publicKey.challenge        = Uint8Array.from(window.atob(publicKey.challenge), c => c.charCodeAt(0));\n    publicKey.allowCredentials = publicKey.allowCredentials.map(function (data) {\n        return {\n            ...data,\n            \"id\": Uint8Array.from(atob(data.id), c => c.charCodeAt(0))\n        };\n    });\n\n    navigator.credentials.get({publicKey})\n        .then(data => {\n            let publicKeyCredential = {\n                id:       data.id,\n                type:     data.type,\n                rawId:    arrayToBase64String(new Uint8Array(data.rawId)),\n                response: {\n                    authenticatorData: arrayToBase64String(new Uint8Array(data.response.authenticatorData)),\n                    clientDataJSON:    arrayToBase64String(new Uint8Array(data.response.clientDataJSON)),\n                    signature:         arrayToBase64String(new Uint8Array(data.response.signature)),\n                    userHandle:        data.response.userHandle ? arrayToBase64String(\n                        new Uint8Array(data.response.userHandle)) : null\n                }\n            };\n\n            document.getElementById('loginGuardCode').value = btoa(JSON.stringify(publicKeyCredential));\n            document.forms['loginguard-captive-form'].submit();\n        }, error => {\n            // Example: timeout, interaction refused...\n            console.log(error);\n            akeeba.LoginGuard.webauthn.handle_error(error);\n        });\n};"],"file":"webauthn.js"}